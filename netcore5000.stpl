server {
        listen %ip%:%proxy_ssl_port% ssl http2;
        listen [::]:443 ssl http2 default_server;
        server_name %domain_idn%;
        ssl_certificate %ssl_pem%;
        ssl_certificate_key %ssl_key%;
        error_log /var/log/%web_system%/domains/%domain%.error.log error;

        ssl_protocols TLSv1.2;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        #gzip on;
        #gzip_min_length 1100;
        #gzip_buffers 4 32k;
        #gzip_types image/svg+xml svg svgz text/plain application/x-javascript text/xml text/css;
        #gzip_vary on;
        
        location / {
            proxy_pass         https://localhost:5001;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        
        #location /error/ {
        #        alias %home%/%user%/web/%domain%/document_errors/;
        #}

        #location @fallback {
        #        proxy_pass https://127.0.0.1:3000:/$1;
        #}

        #location ~ /\.ht {return 404;}
        #location ~ /\.svn/ {return 404;}
        #location ~ /\.git/ {return 404;}
        #location ~ /\.hg/ {return 404;}
        #location ~ /\.bzr/ {return 404;}

        include %home%/%user%/conf/web/%domain%/nginx.ssl.conf_*;        
}
upstream dotnet {
    zone dotnet 64k;
    server 127.0.0.1:5001;
}
